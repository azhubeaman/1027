#作者：Ourjune
#开发时间：2021/11/17 8:14
'''
字符串的驻留机制：
1、字符串的长度为0或1时
2、符合标识符的字符串
3、字符串只在编译时进行驻留，而非运行时
4、[-5，256]之间的整数数字
'''
#第一点：字符串的长度为0或1时
a='!'
b='!'
print(a is b)

a='Python'
b="Python"
c='''Python'''
print(a,id(a))
print(b,id(b))
print(c,id(c))  #内存地址是一样的，后续创建相同字符串时，就不会开辟新空间，只是把地址赋给新建的变量

#第二点：符合标识符的字符串
s1='abc%'
s2='abc%'
print(s1==s2)
print(s1 is s2)  #用交互模式下，就为False,因为pychram强制驻留了
print(id(s1))
print(id(s2))

#第三点：字符串只在编译时进行驻留，而非运行时
a='abc'
b='ab'+'c'
c=''.join(['ab'+'c'])
print(a is b )
print(a is c)  #用交互模式下，就为False,因为pychram强制驻留了。原因是因为字符串只在编译时进行驻留，而非运行时。join方法是在运行时
print(a,id(a),b,id(b),c,id(c))

#第四点：[-5，256]之间的整数数字
a=-6
b=-6
print(a is b) #[-5，256]之间的整数数字

#在交互模式下导入 import sys包，用sys的intern方法强制2个字符串指向同一个对象

#优点：需要相同字符串时，可以直接从字符串池里拿来使用，避免频繁创建和销毁，提升效率和节约内存，因此拼接字符串和修改字符串是比较影响性能的
#在需要进行字符串拼接时建议使用str类型的join方法，而非+，因为join（）方法是先计算出所有字符中的长度，然后再拷贝，只new一次对象，效率比+高

a=' '
b='312'
c=a.join(b)  #a相当于是分隔符
d=a+b
print(c,d)